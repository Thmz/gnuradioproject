<?xml version="1.0"?>
<block>
  <name>Packet Decoder 2</name>
  <key>packetizr_packet_decoder</key>
  <category>[packetizr]</category>
  <import>import packetizr</import>
  <make>packetizr.packet_decoder($preamble, $constel_header, $constel_payload, $header_formatter, $triggertagname, $do_costas, $soft_output, $whiten, $samp_rate, $itemsize)</make>

  <param>
    <name>Preamble (sequence of 1 and -1)</name>
    <key>preamble</key>
    <value>(1,-1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,1,1,-1,1,-1,-1,1,-1,-1,1,1,1,-1,-1,-1,1,-1,1,1,1,1,-1,-1,1,-1,1,-1,-1,-1,1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,1,1,1,1,1,1,-1,-1)</value>
    <type>int_vector</type>
  </param>

   <param>
    <name>Header Constellation</name>
    <key>constel_header</key>
    <type>raw</type>
   </param>

<param>
    <name>Payload Constellation</name>
    <key>constel_payload</key>
    <type>raw</type>
  </param>

<param>
    <name>Header Formatter</name>
    <key>header_formatter</key>
    <type>raw</type>
  </param>

<param>
  <name>Trigger Tag Name</name>
    <key>triggertagname</key>
    <value>"packet_len"</value>
    <type>string</type>
  </param>

 <param>
    <name>Apply Costas Loop</name>
    <key>do_costas</key>
    <type>enum</type>
    <option>
      <name>True</name>
      <key>True</key>
    </option>
     <option>
      <name>False</name>
      <key>False</key>
    </option>
  </param>

 <param>
    <name>Soft decoding</name>
    <key>soft_output</key>
    <type>enum</type>
    <option>
      <name>False</name>
      <key>False</key>
      <opt>ot:byte</opt>
    </option>
    <option>
      <name>True</name>
      <key>True</key>
      <opt>ot:float</opt>
    </option>
  </param>

   <param>
    <name>Whiten</name>
    <key>whiten</key>
    <type>enum</type>
    <option>
      <name>False</name>
      <key>False</key>
    </option>
    <option>
      <name>True</name>
      <key>True</key>
    </option>
  </param>

<param>
  <name>Sample rate</name>
    <key>samp_rate</key>
    <value>samp_rate</value>
    <type>int</type>
  </param>

<param>
 <name>Itemsize</name>
    <key>itemsize</key>
    <value>1</value>
    <type>int</type>
  </param>


  <!-- Make one 'sink' node per input. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <sink>
   <name>symbols_in</name>
    <type>complex</type>
  </sink>

  <!-- Make one 'source' node per output. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <source>
    <name>data_bytes</name>
    <type>$soft_output.ot</type>
  </source>
</block>
